{
    "parametrized_description": "A farmer wants to mix FeedA and FeedB such that the mixture contains at least MinProtein units of protein and at least MinFat units of fat. FeedA costs CostFeedA per kilogram and provides ProteinFeedA units of protein and FatFeedA units of fat per kilogram. FeedB costs CostFeedB per kilogram and provides ProteinFeedB units of protein and FatFeedB units of fat per kilogram. The objective is to determine the amounts of FeedA and FeedB to minimize the total cost of the mixture.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "CostFeedA": {
            "description": "Cost per kilogram of Feed A",
            "shape": []
        },
        "CostFeedB": {
            "description": "Cost per kilogram of Feed B",
            "shape": []
        },
        "ProteinFeedA": {
            "description": "Protein units per kilogram of Feed A",
            "shape": []
        },
        "ProteinFeedB": {
            "description": "Protein units per kilogram of Feed B",
            "shape": []
        },
        "FatFeedA": {
            "description": "Fat units per kilogram of Feed A",
            "shape": []
        },
        "FatFeedB": {
            "description": "Fat units per kilogram of Feed B",
            "shape": []
        },
        "MinProtein": {
            "description": "Minimum required units of protein in the mixture",
            "shape": []
        },
        "MinFat": {
            "description": "Minimum required units of fat in the mixture",
            "shape": []
        }
    },
    "variables": {
        "QuantityFeedA": {
            "description": "The quantity of Feed A used in the mixture (in kilograms)",
            "type": "continuous",
            "shape": []
        },
        "QuantityFeedB": {
            "description": "The quantity of Feed B used in the mixture (in kilograms)",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "Each kilogram of FeedA provides ProteinFeedA units of protein and each kilogram of FeedB provides ProteinFeedB units of protein. The mixture must contain at least MinProtein units of protein.",
            "formulation": "ProteinFeedA \\times QuantityFeedA + ProteinFeedB \\times QuantityFeedB \\geq MinProtein",
            "code": {
                "gurobipy": "model.addConstr(ProteinFeedA * QuantityFeedA + ProteinFeedB * QuantityFeedB >= MinProtein)"
            }
        },
        {
            "description": "Each kilogram of FeedA provides FatFeedA units of fat and each kilogram of FeedB provides FatFeedB units of fat. The mixture must contain at least MinFat units of fat.",
            "formulation": "FatFeedA \\cdot QuantityFeedA + FatFeedB \\cdot QuantityFeedB \\geq MinFat",
            "code": {
                "gurobipy": "model.addConstr(FatFeedA * QuantityFeedA + FatFeedB * QuantityFeedB >= MinFat)"
            }
        }
    ],
    "objective": {
        "description": "The total cost of the mixture is CostFeedA multiplied by the amount of FeedA plus CostFeedB multiplied by the amount of FeedB. The objective is to minimize the total cost.",
        "formulation": "Min CostFeedA \\times QuantityFeedA + CostFeedB \\times QuantityFeedB",
        "code": {
            "gurobipy": "model.setObjective(CostFeedA * QuantityFeedA + CostFeedB * QuantityFeedB, GRB.MINIMIZE)"
        }
    }
}