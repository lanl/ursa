{
    "parametrized_description": "A company produces chairs and dressers. Each chair yields a profit of ProfitPerChair, while each dresser yields a profit of ProfitPerDresser. Each week, AvailableStain gallons of stain and AvailableOak lengths of oak wood are available. Each chair requires StainPerChair gallons of stain and OakPerChair lengths of oak wood, while each dresser requires StainPerDresser gallons of stain and OakPerDresser lengths of oak wood. Determine the maximum profit.",
    "keywords": [
        "N.A."
    ],
    "parameters": {
        "ProfitPerChair": {
            "description": "Profit per chair",
            "shape": []
        },
        "ProfitPerDresser": {
            "description": "Profit per dresser",
            "shape": []
        },
        "AvailableStain": {
            "description": "Available gallons of stain per week",
            "shape": []
        },
        "AvailableOak": {
            "description": "Available lengths of oak wood per week",
            "shape": []
        },
        "StainPerChair": {
            "description": "Gallons of stain required to produce one chair",
            "shape": []
        },
        "StainPerDresser": {
            "description": "Gallons of stain required to produce one dresser",
            "shape": []
        },
        "OakPerChair": {
            "description": "Lengths of oak wood required to produce one chair",
            "shape": []
        },
        "OakPerDresser": {
            "description": "Lengths of oak wood required to produce one dresser",
            "shape": []
        }
    },
    "variables": {
        "NumberOfChairs": {
            "description": "The number of chairs produced per week",
            "type": "continuous",
            "shape": []
        },
        "NumberOfDressers": {
            "description": "The number of dressers produced per week",
            "type": "continuous",
            "shape": []
        }
    },
    "constraints": [
        {
            "description": "The total gallons of stain used for producing chairs and dressers cannot exceed AvailableStain per week.",
            "formulation": "StainPerChair \\cdot NumberOfChairs + StainPerDresser \\cdot NumberOfDressers \\leq AvailableStain",
            "code": {
                "gurobipy": "model.addConstr(StainPerChair * NumberOfChairs + StainPerDresser * NumberOfDressers <= AvailableStain)"
            }
        },
        {
            "description": "The total lengths of oak wood used for producing chairs and dressers cannot exceed AvailableOak per week.",
            "formulation": "NumberOfChairs \\cdot OakPerChair + NumberOfDressers \\cdot OakPerDresser \\leq AvailableOak",
            "code": {
                "gurobipy": "model.addConstr(NumberOfChairs * OakPerChair + NumberOfDressers * OakPerDresser <= AvailableOak)"
            }
        },
        {
            "description": "The number of chairs produced must be a non-negative integer.",
            "formulation": "NumberOfChairs \\geq 0",
            "code": {
                "gurobipy": "model.addConstr(NumberOfChairs >= 0)"
            }
        },
        {
            "description": "The number of dressers produced must be a non-negative integer.",
            "formulation": "NumberOfDressers \\geq 0",
            "code": {
                "gurobipy": "model.addConstr(NumberOfDressers >= 0)"
            }
        }
    ],
    "objective": {
        "description": "Maximize the total profit, which is ProfitPerChair multiplied by the number of chairs produced plus ProfitPerDresser multiplied by the number of dressers produced.",
        "formulation": "Max ProfitPerChair \\cdot NumberOfChairs + ProfitPerDresser \\cdot NumberOfDressers",
        "code": {
            "gurobipy": "model.setObjective(ProfitPerChair * NumberOfChairs + ProfitPerDresser * NumberOfDressers, GRB.MAXIMIZE)"
        }
    }
}